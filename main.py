from fastapi import FastAPI, Request, HTTPException
from fastapi.responses import HTMLResponse, RedirectResponse

app = FastAPI()

# In-memory store of short codes to URLs
url_store = {
    "abc123": "https://example.com",
    "def456": "https://openai.com",
}

@app.get("/")
def home():
    return {"message": "Welcome to your unique URL shortener with preview!"}

@app.get("/r/{short_code}", response_class=HTMLResponse)
def preview(short_code: str):
    target_url = url_store.get(short_code)
    if not target_url:
        raise HTTPException(status_code=404, detail="Short URL not found.")
    # Show preview page
    html_content = f"""
    <html>
    <head>
        <title>Link Preview</title>
    </head>
    <body style="font-family:sans-serif;">
        <h2>You're about to visit:</h2>
        <p><strong>{target_url}</strong></p>
        <p>This link was generated by your personal URL shortener. If you trust it, click below to continue.</p>
        <form action="/redirect/{short_code}" method="get">
            <button style="padding:10px;font-size:16px;">Continue to Website</button>
        </form>
        <p style="color:gray;">Always verify links before proceeding.</p>
    </body>
    </html>
    """
    return HTMLResponse(content=html_content)

@app.get("/redirect/{short_code}")
def redirect(short_code: str):
    target_url = url_store.get(short_code)
    if not target_url:
        raise HTTPException(status_code=404, detail="Short URL not found.")
    return RedirectResponse(target_url)
